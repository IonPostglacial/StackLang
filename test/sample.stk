{ dup * } :square def

{ square swap square + } :square-distance def

3 2 square-distance print linebreak .

{ 18 >= { "major" } { "minor" } rot if } :majority-status def

5 majority-status print linebreak .
22 majority-status print linebreak .

{
    1 swap
    {
        dup rot *
        swap
        1 -
        dup 0 >
    } while
    .
} :factorial def

5 factorial print linebreak .